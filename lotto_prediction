from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import GridSearchCV
from sklearn.model_selection import train_test_split
import pandas as pd


def lotto_data_list (target_digit) :
    
    lotto_data_list = ['digit1', 'digit2', 'digit3', 'digit4', 'digit5', 'digit6', 'lucky_number']   
    lotto_data_columns = lotto_data_list [ : target_digit -1 ] + lotto_data_list [target_digit : ]
#    print ("lotto_data_columns : ", lotto_data_columns)
    
    lotto_target_column = lotto_data_list [target_digit -1]
#    print ("lotto_target_column : ", lotto_target_column)
        
    return lotto_data_columns, lotto_target_column



lotto_data = pd.DataFrame()
lotto_target = pd.DataFrame()


lotto_df = pd.read_csv('/Users/huneykong/Jupyter_exercise/lottonumber.csv')

dt_clf = DecisionTreeClassifier()


for rn in range (5, 10) :
    
    
    final_number = []
    
    
    for target_digit in range (7) :


        lotto_data_columns, lotto_target_column = lotto_data_list (target_digit+1)

        lotto_data = lotto_df[lotto_data_columns]
        lotto_target = lotto_df[lotto_target_column]

        X_train, X_test, y_train, y_test = train_test_split (lotto_data, lotto_target, test_size = 0.2, random_state=rn)

        parameters = {'max_depth': [3, 4, 5, 6, 7, 8, 9], 'min_samples_split' : [2, 3, 4, 5, 6, 7, 8, 9]}

        grid_tree = GridSearchCV (dt_clf, param_grid = parameters, cv = 5, refit=True)

        grid_tree.fit(X_train, y_train)

        scores = grid_tree.cv_results_

        print ("=" * 40)
        print ("\ndigit {} best parameters  : {}".format (target_digit +1, grid_tree.best_params_))
        print ("        best accuracy    : {:.4f}%".format (grid_tree.best_score_ *100))


        # forecast
        pred = grid_tree.predict(lotto_data)

        pred_number = pred[0]

        final_number.append(pred_number)


        print ("        predicted number : {}\n". format(pred_number))
        print ("=" * 40,"\n")


    print ("random_state = ", rn)  
    
    lucky_number = final_number.pop(6)
    
    print ("Predicted Lucky Number : ", lucky_number)



    print ("Predicted Lotto Number : ", sorted(final_number))



    print ("=" * 40, "\n")

